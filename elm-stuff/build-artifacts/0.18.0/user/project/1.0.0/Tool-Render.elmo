var _user$project$Tool_Render$toolPallet = F5(
	function (x, y, width, height, activeTool) {
		var buttonList = {
			ctor: '::',
			_0: _user$project$Tool$DrawRectangle,
			_1: {
				ctor: '::',
				_0: _user$project$Tool$DrawElipse,
				_1: {ctor: '[]'}
			}
		};
		var selectionColor = '#ff5e5e';
		var selectionBoxThickness = 7;
		var numberOfButtons = 2;
		var borderSize = 5;
		var heightPerButton = (_elm_lang$core$Basics$toFloat(height - borderSize) / numberOfButtons) - borderSize;
		var yPosition = function (elementNumber) {
			return ((elementNumber * (heightPerButton + borderSize)) + _elm_lang$core$Basics$toFloat(y)) + borderSize;
		};
		var xWidth = width - (borderSize * 2);
		var rectangleButton = function (index) {
			return A2(
				_elm_lang$svg$Svg$use,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#drawRectangle'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$x(
							_elm_lang$core$Basics$toString(x + borderSize)),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$y(
								_elm_lang$core$Basics$toString(
									yPosition(index))),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$width(
									_elm_lang$core$Basics$toString(xWidth)),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$height(
										_elm_lang$core$Basics$toString(heightPerButton)),
									_1: {
										ctor: '::',
										_0: _user$project$Events$mouseUpWithClickTarget(
											_user$project$Messages_ClickTarget$ToolPallet(_user$project$Tool$DrawRectangle)),
										_1: {
											ctor: '::',
											_0: _user$project$Events$mouseDownWithClickTarget(
												_user$project$Messages_ClickTarget$ToolPallet(_user$project$Tool$DrawRectangle)),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				},
				{ctor: '[]'});
		};
		var elipseButton = function (index) {
			return A2(
				_elm_lang$svg$Svg$use,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#drawElipse'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$x(
							_elm_lang$core$Basics$toString(x + borderSize)),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$y(
								_elm_lang$core$Basics$toString(
									yPosition(index))),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$width(
									_elm_lang$core$Basics$toString(xWidth)),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$height(
										_elm_lang$core$Basics$toString(heightPerButton)),
									_1: {
										ctor: '::',
										_0: _user$project$Events$mouseUpWithClickTarget(
											_user$project$Messages_ClickTarget$ToolPallet(_user$project$Tool$DrawElipse)),
										_1: {
											ctor: '::',
											_0: _user$project$Events$mouseDownWithClickTarget(
												_user$project$Messages_ClickTarget$ToolPallet(_user$project$Tool$DrawElipse)),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				},
				{ctor: '[]'});
		};
		var getToolFunction = function (tool) {
			var _p0 = tool;
			switch (_p0.ctor) {
				case 'Select':
					return _elm_lang$core$Native_Utils.crashCase(
						'Tool.Render',
						{
							start: {line: 96, column: 13},
							end: {line: 107, column: 71}
						},
						_p0)('TODO implement select button');
				case 'DrawRectangle':
					return rectangleButton;
				case 'DrawElipse':
					return elipseButton;
				default:
					return _elm_lang$core$Native_Utils.crashCase(
						'Tool.Render',
						{
							start: {line: 96, column: 13},
							end: {line: 107, column: 71}
						},
						_p0)('TODO implement draggable tool pallet');
			}
		};
		var selectionBox = function (index) {
			return A2(
				_elm_lang$svg$Svg$g,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$rect,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$x(
								_elm_lang$core$Basics$toString(x + borderSize)),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$y(
									_elm_lang$core$Basics$toString(
										yPosition(index))),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$width(
										_elm_lang$core$Basics$toString(xWidth)),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$height(
											_elm_lang$core$Basics$toString(selectionBoxThickness)),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$fill(selectionColor),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$stroke('none'),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$rect,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$x(
									_elm_lang$core$Basics$toString(x + borderSize)),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$y(
										_elm_lang$core$Basics$toString(
											(yPosition(index) + heightPerButton) - selectionBoxThickness)),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$width(
											_elm_lang$core$Basics$toString(xWidth)),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$height(
												_elm_lang$core$Basics$toString(selectionBoxThickness)),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$fill(selectionColor),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$stroke('none'),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$rect,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$x(
										_elm_lang$core$Basics$toString(x + borderSize)),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$y(
											_elm_lang$core$Basics$toString(
												yPosition(index))),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$width(
												_elm_lang$core$Basics$toString(selectionBoxThickness)),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$height(
													_elm_lang$core$Basics$toString(heightPerButton)),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$fill(selectionColor),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$stroke('none'),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$svg$Svg$rect,
									{
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$x(
											_elm_lang$core$Basics$toString(((x + borderSize) + xWidth) - selectionBoxThickness)),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$y(
												_elm_lang$core$Basics$toString(
													yPosition(index))),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$width(
													_elm_lang$core$Basics$toString(selectionBoxThickness)),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$height(
														_elm_lang$core$Basics$toString(heightPerButton)),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$fill(selectionColor),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$stroke('none'),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}
						}
					}
				});
		};
		var positionButtons = F2(
			function (buttonList, index) {
				var _p3 = buttonList;
				if (_p3.ctor === '[]') {
					return {ctor: '[]'};
				} else {
					var _p5 = _p3._1;
					var _p4 = _p3._0;
					var f = getToolFunction(_p4);
					return _elm_lang$core$Native_Utils.eq(_p4, activeTool) ? {
						ctor: '::',
						_0: f(index),
						_1: {
							ctor: '::',
							_0: selectionBox(index),
							_1: A2(positionButtons, _p5, index + 1)
						}
					} : {
						ctor: '::',
						_0: f(index),
						_1: A2(positionButtons, _p5, index + 1)
					};
				}
			});
		var positionedButtons = A2(positionButtons, buttonList, 0);
		return A2(
			_elm_lang$svg$Svg$g,
			{ctor: '[]'},
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$rect,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$x(
								_elm_lang$core$Basics$toString(x)),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$y(
									_elm_lang$core$Basics$toString(y)),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$width(
										_elm_lang$core$Basics$toString(width)),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$height(
											_elm_lang$core$Basics$toString(height)),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$fill('#0254d8'),
											_1: {
												ctor: '::',
												_0: _user$project$Events$mouseUpWithClickTarget(
													_user$project$Messages_ClickTarget$ToolPallet(_user$project$Tool$ToolPalletHandle)),
												_1: {
													ctor: '::',
													_0: _user$project$Events$mouseDownWithClickTarget(
														_user$project$Messages_ClickTarget$ToolPallet(_user$project$Tool$DrawElipse)),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				},
				positionedButtons));
	});
var _user$project$Tool_Render$symbols = {
	ctor: '::',
	_0: A2(
		_elm_lang$svg$Svg$symbol,
		{
			ctor: '::',
			_0: _elm_lang$svg$Svg_Attributes$id('drawRectangle'),
			_1: {
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 100 100'),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
					_1: {ctor: '[]'}
				}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$svg$Svg$use,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#buttonBackground'),
					_1: {ctor: '[]'}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$use,
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#drawRectangleIcon'),
						_1: {ctor: '[]'}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			}
		}),
	_1: {
		ctor: '::',
		_0: A2(
			_elm_lang$svg$Svg$symbol,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$id('drawElipse'),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 100 100'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$use,
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#buttonBackground'),
						_1: {ctor: '[]'}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$use,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#drawElipseIcon'),
							_1: {ctor: '[]'}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$svg$Svg$symbol,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$id('buttonBackground'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 100 100'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$rect,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$fill('#ddeaff'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$stroke('none'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$x('0'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$y('0'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$width('100'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$height('100'),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$symbol,
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$id('drawRectangleIcon'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 100 100'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('xMidYMid'),
								_1: {ctor: '[]'}
							}
						}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$rect,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$fill('#1e1e1e'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$stroke('none'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$x('20'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$y('20'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$width('60'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$height('60'),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$symbol,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('drawElipseIcon'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 100 100'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('xMidYMid'),
									_1: {ctor: '[]'}
								}
							}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$ellipse,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$fill('#1e1e1e'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$stroke('none'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$cx('50'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$cy('50'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$rx('30'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$ry('30'),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		}
	}
};
