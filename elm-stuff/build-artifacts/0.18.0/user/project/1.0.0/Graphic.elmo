var _user$project$Graphic$commonToSvgA = function (common) {
	return {
		ctor: '::',
		_0: _elm_lang$svg$Svg_Attributes$fill(common.fill),
		_1: {
			ctor: '::',
			_0: _elm_lang$svg$Svg_Attributes$stroke(common.stroke),
			_1: {
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$strokeWidth(common.strokeWidth),
				_1: {ctor: '[]'}
			}
		}
	};
};
var _user$project$Graphic$pointListToString = function (pList) {
	var _p0 = pList;
	if (_p0.ctor === '[]') {
		return '';
	} else {
		if (_p0._1.ctor === '[]') {
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(_p0._0.x),
				A2(
					_elm_lang$core$Basics_ops['++'],
					' ',
					_elm_lang$core$Basics$toString(_p0._0.y)));
		} else {
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(_p0._0.x),
				A2(
					_elm_lang$core$Basics_ops['++'],
					' ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p0._0.y),
						A2(
							_elm_lang$core$Basics_ops['++'],
							', ',
							_user$project$Graphic$pointListToString(_p0._1)))));
		}
	}
};
var _user$project$Graphic$toSvg = F2(
	function (extraAttributes, graphic) {
		var _p1 = graphic;
		switch (_p1.ctor) {
			case 'Rectangle':
				var _p2 = _p1._0;
				return A2(
					_elm_lang$svg$Svg$rect,
					A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$x(
								_elm_lang$core$Basics$toString(_p2.x)),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$y(
									_elm_lang$core$Basics$toString(_p2.y)),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$width(
										_elm_lang$core$Basics$toString(_p2.width)),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$height(
											_elm_lang$core$Basics$toString(_p2.height)),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$rx(
												_elm_lang$core$Basics$toString(_p2.rx)),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$ry(
													_elm_lang$core$Basics$toString(_p2.ry)),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						},
						A2(
							_elm_lang$core$Basics_ops['++'],
							_user$project$Graphic$commonToSvgA(_p1._1),
							extraAttributes)),
					{ctor: '[]'});
			case 'Elipse':
				var _p3 = _p1._0;
				return A2(
					_elm_lang$svg$Svg$ellipse,
					A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$cx(
								_elm_lang$core$Basics$toString(_p3.cx)),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$cy(
									_elm_lang$core$Basics$toString(_p3.cy)),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$rx(
										_elm_lang$core$Basics$toString(_p3.rx)),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$ry(
											_elm_lang$core$Basics$toString(_p3.ry)),
										_1: {ctor: '[]'}
									}
								}
							}
						},
						A2(
							_elm_lang$core$Basics_ops['++'],
							_user$project$Graphic$commonToSvgA(_p1._1),
							extraAttributes)),
					{ctor: '[]'});
			default:
				return A2(
					_elm_lang$svg$Svg$polygon,
					A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$points(
								_user$project$Graphic$pointListToString(
									{ctor: '::', _0: _p1._0, _1: _p1._1})),
							_1: {ctor: '[]'}
						},
						A2(
							_elm_lang$core$Basics_ops['++'],
							_user$project$Graphic$commonToSvgA(_p1._2),
							extraAttributes)),
					{ctor: '[]'});
		}
	});
var _user$project$Graphic$polygonSnapDistance = 4;
var _user$project$Graphic$StartPosition = F2(
	function (a, b) {
		return {x: a, y: b};
	});
var _user$project$Graphic$RectangleAttributes = F6(
	function (a, b, c, d, e, f) {
		return {x: a, y: b, width: c, height: d, rx: e, ry: f};
	});
var _user$project$Graphic$ElipseAttributes = F4(
	function (a, b, c, d) {
		return {cx: a, cy: b, rx: c, ry: d};
	});
var _user$project$Graphic$CommonAttributes = F3(
	function (a, b, c) {
		return {stroke: a, strokeWidth: b, fill: c};
	});
var _user$project$Graphic$Polygon = F3(
	function (a, b, c) {
		return {ctor: 'Polygon', _0: a, _1: b, _2: c};
	});
var _user$project$Graphic$createPolygon = F2(
	function (polyList, common) {
		return A2(_user$project$Graphic$Polygon, polyList, common);
	});
var _user$project$Graphic$Elipse = F2(
	function (a, b) {
		return {ctor: 'Elipse', _0: a, _1: b};
	});
var _user$project$Graphic$createElipse = F2(
	function (rec, common) {
		return A2(_user$project$Graphic$Elipse, rec, common);
	});
var _user$project$Graphic$Rectangle = F2(
	function (a, b) {
		return {ctor: 'Rectangle', _0: a, _1: b};
	});
var _user$project$Graphic$createRectangle = F2(
	function (rec, common) {
		return A2(_user$project$Graphic$Rectangle, rec, common);
	});
var _user$project$Graphic$SkewY = F2(
	function (a, b) {
		return {ctor: 'SkewY', _0: a, _1: b};
	});
var _user$project$Graphic$SkewX = F2(
	function (a, b) {
		return {ctor: 'SkewX', _0: a, _1: b};
	});
var _user$project$Graphic$Rotate = F4(
	function (a, b, c, d) {
		return {ctor: 'Rotate', _0: a, _1: b, _2: c, _3: d};
	});
var _user$project$Graphic$Scale = F3(
	function (a, b, c) {
		return {ctor: 'Scale', _0: a, _1: b, _2: c};
	});
var _user$project$Graphic$Translate = F3(
	function (a, b, c) {
		return {ctor: 'Translate', _0: a, _1: b, _2: c};
	});
var _user$project$Graphic$None = {ctor: 'None'};
