var _simonh1000$elm_colorpicker$ColorPicker$decodePoint = A3(
	_elm_lang$core$Json_Decode$map2,
	F2(
		function (v0, v1) {
			return {ctor: '_Tuple2', _0: v0, _1: v1};
		}),
	A2(_elm_lang$core$Json_Decode$field, 'offsetX', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode$field, 'offsetY', _elm_lang$core$Json_Decode$int));
var _simonh1000$elm_colorpicker$ColorPicker$onMouseMovePos = function (msgCreator) {
	return A2(
		_elm_lang$svg$Svg_Events$on,
		'mousemove',
		A2(_elm_lang$core$Json_Decode$map, msgCreator, _simonh1000$elm_colorpicker$ColorPicker$decodePoint));
};
var _simonh1000$elm_colorpicker$ColorPicker$onClickSvg = function (msgCreator) {
	return A2(
		_elm_lang$svg$Svg_Events$on,
		'click',
		A2(_elm_lang$core$Json_Decode$map, msgCreator, _simonh1000$elm_colorpicker$ColorPicker$decodePoint));
};
var _simonh1000$elm_colorpicker$ColorPicker$padHex = function (x) {
	return (_elm_lang$core$Native_Utils.cmp(x, 16) < 0) ? A2(
		_elm_lang$core$Basics_ops['++'],
		'0',
		_rtfeldman$hex$Hex$toString(x)) : _rtfeldman$hex$Hex$toString(x);
};
var _simonh1000$elm_colorpicker$ColorPicker$pickerStyles = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'crosshair'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
			_1: {ctor: '[]'}
		}
	});
var _simonh1000$elm_colorpicker$ColorPicker$hex2Color = function (s) {
	var conv = F2(
		function (begin, end) {
			return function (_p0) {
				return _rtfeldman$hex$Hex$fromString(
					A3(_elm_lang$core$String$slice, begin, end, _p0));
			};
		});
	var hex = _elm_lang$core$String$toLower(s);
	var _p1 = {
		ctor: '_Tuple3',
		_0: A3(conv, 1, 3, hex),
		_1: A3(conv, 3, 5, hex),
		_2: A3(conv, 5, 7, hex)
	};
	if ((((_p1.ctor === '_Tuple3') && (_p1._0.ctor === 'Ok')) && (_p1._1.ctor === 'Ok')) && (_p1._2.ctor === 'Ok')) {
		return _elm_lang$core$Maybe$Just(
			A3(_elm_lang$core$Color$rgb, _p1._0._0, _p1._1._0, _p1._2._0));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _simonh1000$elm_colorpicker$ColorPicker$color2Hex = function (col) {
	var _p2 = _elm_lang$core$Color$toRgb(col);
	var red = _p2.red;
	var green = _p2.green;
	var blue = _p2.blue;
	return A2(
		F2(
			function (x, y) {
				return A2(_elm_lang$core$Basics_ops['++'], x, y);
			}),
		'#',
		A2(
			_elm_lang$core$String$join,
			'',
			A2(
				_elm_lang$core$List$map,
				_simonh1000$elm_colorpicker$ColorPicker$padHex,
				{
					ctor: '::',
					_0: red,
					_1: {
						ctor: '::',
						_0: green,
						_1: {
							ctor: '::',
							_0: blue,
							_1: {ctor: '[]'}
						}
					}
				})));
};
var _simonh1000$elm_colorpicker$ColorPicker$dragAttrs = F3(
	function (mouseDown, mdMsg, clMsg) {
		var common = {
			ctor: '::',
			_0: _elm_lang$svg$Svg_Events$onMouseDown(
				mdMsg(true)),
			_1: {
				ctor: '::',
				_0: _elm_lang$svg$Svg_Events$onMouseUp(
					mdMsg(false)),
				_1: {
					ctor: '::',
					_0: _simonh1000$elm_colorpicker$ColorPicker$onClickSvg(clMsg),
					_1: {ctor: '[]'}
				}
			}
		};
		return mouseDown ? {
			ctor: '::',
			_0: _simonh1000$elm_colorpicker$ColorPicker$onMouseMovePos(clMsg),
			_1: common
		} : {
			ctor: '::',
			_0: _elm_lang$svg$Svg_Events$onMouseOut(
				mdMsg(false)),
			_1: common
		};
	});
var _simonh1000$elm_colorpicker$ColorPicker$safeToHsl = function (col) {
	var _p3 = _elm_lang$core$Color$toHsl(col);
	var hsl = _p3;
	var hue = _p3.hue;
	var saturation = _p3.saturation;
	var lightness = _p3.lightness;
	return _elm_lang$core$Basics$isNaN(saturation) ? {hue: hue, saturation: 0, lightness: lightness, alpha: 1} : hsl;
};
var _simonh1000$elm_colorpicker$ColorPicker$pickerIndicator = function (col) {
	var _p4 = _simonh1000$elm_colorpicker$ColorPicker$safeToHsl(col);
	var saturation = _p4.saturation;
	var lightness = _p4.lightness;
	var borderColor = (_elm_lang$core$Native_Utils.cmp(lightness, 0.95) > 0) ? '#cccccc' : '#ffffff';
	var cx_ = _elm_lang$core$Basics$toString(
		_elm_lang$core$Basics$round((saturation * 200) - 3));
	var cy_ = _elm_lang$core$Basics$toString(
		_elm_lang$core$Basics$round((150 - (lightness * 150)) - 2));
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'position', _1: 'absolute'},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'top',
							_1: A2(_elm_lang$core$Basics_ops['++'], cy_, 'px')
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'left',
								_1: A2(_elm_lang$core$Basics_ops['++'], cx_, 'px')
							},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '100%'},
								_1: {
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'border',
										_1: A2(_elm_lang$core$Basics_ops['++'], '2px solid ', borderColor)
									},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'width', _1: '6px'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'height', _1: '6px'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'pointer-events', _1: 'none'},
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{ctor: '[]'});
};
var _simonh1000$elm_colorpicker$ColorPicker$sliderIndicator = function (col) {
	var _p5 = _simonh1000$elm_colorpicker$ColorPicker$safeToHsl(col);
	var hue = _p5.hue;
	var xVal = _elm_lang$core$Basics$toString(
		_elm_lang$core$Basics$round((((hue / 2) / _elm_lang$core$Basics$pi) * 200) - 4));
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'position', _1: 'absolute'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'top', _1: '-3px'},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'left',
								_1: A2(_elm_lang$core$Basics_ops['++'], xVal, 'px')
							},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'border', _1: '3px solid #ddd'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'height', _1: '26px'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'width', _1: '9px'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'pointer-events', _1: 'none'},
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{ctor: '[]'});
};
var _simonh1000$elm_colorpicker$ColorPicker$Model = F2(
	function (a, b) {
		return {pickerMouseDown: a, sliderMouseDown: b};
	});
var _simonh1000$elm_colorpicker$ColorPicker$State = function (a) {
	return {ctor: 'State', _0: a};
};
var _simonh1000$elm_colorpicker$ColorPicker$empty = _simonh1000$elm_colorpicker$ColorPicker$State(
	{pickerMouseDown: false, sliderMouseDown: false});
var _simonh1000$elm_colorpicker$ColorPicker$update = F3(
	function (message, col, _p6) {
		var _p7 = _p6;
		var _p11 = _p7._0;
		var _p8 = message;
		switch (_p8.ctor) {
			case 'PickerClick':
				var _p9 = _simonh1000$elm_colorpicker$ColorPicker$safeToHsl(col);
				var hue = _p9.hue;
				var newColour = A3(
					_elm_lang$core$Color$hsl,
					hue,
					_elm_lang$core$Basics$toFloat(_p8._0._0) / 200,
					1 - (_elm_lang$core$Basics$toFloat(_p8._0._1) / 150));
				return {
					ctor: '_Tuple2',
					_0: _simonh1000$elm_colorpicker$ColorPicker$State(_p11),
					_1: _elm_lang$core$Maybe$Just(newColour)
				};
			case 'PickerMouseDown':
				return {
					ctor: '_Tuple2',
					_0: _simonh1000$elm_colorpicker$ColorPicker$State(
						_elm_lang$core$Native_Utils.update(
							_p11,
							{pickerMouseDown: _p8._0})),
					_1: _elm_lang$core$Maybe$Nothing
				};
			case 'SliderClick':
				var hue = ((_elm_lang$core$Basics$toFloat(_p8._0._0) / 200) * 2) * _elm_lang$core$Basics$pi;
				var _p10 = _simonh1000$elm_colorpicker$ColorPicker$safeToHsl(col);
				var saturation = _p10.saturation;
				var lightness = _p10.lightness;
				var newColour = (_elm_lang$core$Native_Utils.eq(saturation, 0) && (_elm_lang$core$Native_Utils.cmp(lightness, 2.0e-2) < 0)) ? A3(_elm_lang$core$Color$hsl, hue, 0.5, 0.5) : A3(_elm_lang$core$Color$hsl, hue, saturation, lightness);
				return {
					ctor: '_Tuple2',
					_0: _simonh1000$elm_colorpicker$ColorPicker$State(_p11),
					_1: _elm_lang$core$Maybe$Just(newColour)
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _simonh1000$elm_colorpicker$ColorPicker$State(
						_elm_lang$core$Native_Utils.update(
							_p11,
							{sliderMouseDown: _p8._0})),
					_1: _elm_lang$core$Maybe$Nothing
				};
		}
	});
var _simonh1000$elm_colorpicker$ColorPicker$SliderMouseDown = function (a) {
	return {ctor: 'SliderMouseDown', _0: a};
};
var _simonh1000$elm_colorpicker$ColorPicker$SliderClick = function (a) {
	return {ctor: 'SliderClick', _0: a};
};
var _simonh1000$elm_colorpicker$ColorPicker$slider = function (_p12) {
	var _p13 = _p12;
	var stops = {
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: '0%', _1: '#FF0000'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: '17%', _1: '#FF00FF'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: '33%', _1: '#0000FF'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: '50%', _1: '#00FFFF'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: '66%', _1: '#00FF00'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: '83%', _1: '#FFFF00'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: '100%', _1: '#FF0000'},
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		}
	};
	var ss = F2(
		function (os, sc) {
			return A2(
				_elm_lang$svg$Svg$stop,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$offset(os),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$stopColor(sc),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$stopOpacity('1'),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'});
		});
	return A2(
		_elm_lang$svg$Svg$svg,
		{
			ctor: '::',
			_0: _elm_lang$svg$Svg_Attributes$width('200'),
			_1: {
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$height('20'),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$svg$Svg$defs,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$linearGradient,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('gradient-hsv'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$x1('100%'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$y1('0%'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$x2('0%'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$y2('0%'),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						},
						A2(
							_elm_lang$core$List$map,
							_elm_lang$core$Basics$uncurry(ss),
							stops)),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$rect,
					A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$x('0'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$y('0'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$width('100%'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$height('100%'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$fill('url(#gradient-hsv)'),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						},
						A3(_simonh1000$elm_colorpicker$ColorPicker$dragAttrs, _p13.sliderMouseDown, _simonh1000$elm_colorpicker$ColorPicker$SliderMouseDown, _simonh1000$elm_colorpicker$ColorPicker$SliderClick)),
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			}
		});
};
var _simonh1000$elm_colorpicker$ColorPicker$PickerMouseDown = function (a) {
	return {ctor: 'PickerMouseDown', _0: a};
};
var _simonh1000$elm_colorpicker$ColorPicker$PickerClick = function (a) {
	return {ctor: 'PickerClick', _0: a};
};
var _simonh1000$elm_colorpicker$ColorPicker$picker = F2(
	function (col, model) {
		var _p14 = _simonh1000$elm_colorpicker$ColorPicker$safeToHsl(col);
		var hue = _p14.hue;
		var colHex = _simonh1000$elm_colorpicker$ColorPicker$color2Hex(
			A3(_elm_lang$core$Color$hsl, hue, 1, 0.5));
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width('200'),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height('150'),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$linearGradient,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('pickerSaturation'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$svg$Svg$stop,
									{
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$offset('0'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$stopColor('#808080'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$stopOpacity('1'),
												_1: {ctor: '[]'}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$svg$Svg$stop,
										{
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$offset('1'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$stopColor('#808080'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$stopOpacity('0'),
													_1: {ctor: '[]'}
												}
											}
										},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$linearGradient,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$id('pickerBrightness'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$x1('0'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$y1('0'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$x2('0'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$y2('1'),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$svg$Svg$stop,
										{
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$offset('0'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$stopColor('#fff'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$stopOpacity('1'),
													_1: {ctor: '[]'}
												}
											}
										},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$svg$Svg$stop,
											{
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$offset('0.499'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$stopColor('#fff'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$stopOpacity('0'),
														_1: {ctor: '[]'}
													}
												}
											},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$svg$Svg$stop,
												{
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$offset('0.5'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$stopColor('#000'),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$stopOpacity('0'),
															_1: {ctor: '[]'}
														}
													}
												},
												{ctor: '[]'}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$svg$Svg$stop,
													{
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$offset('1'),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$stopColor('#000'),
															_1: {
																ctor: '::',
																_0: _elm_lang$svg$Svg_Attributes$stopOpacity('1'),
																_1: {ctor: '[]'}
															}
														}
													},
													{ctor: '[]'}),
												_1: {ctor: '[]'}
											}
										}
									}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$rect,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('picker'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$width('200'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$height('150'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill(colHex),
										_1: {ctor: '[]'}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$rect,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$width('200'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$height('150'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill('url(#pickerSaturation)'),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$rect,
								A2(
									_elm_lang$core$Basics_ops['++'],
									{
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$width('200'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$height('150'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$fill('url(#pickerBrightness)'),
												_1: {ctor: '[]'}
											}
										}
									},
									A3(_simonh1000$elm_colorpicker$ColorPicker$dragAttrs, model.pickerMouseDown, _simonh1000$elm_colorpicker$ColorPicker$PickerMouseDown, _simonh1000$elm_colorpicker$ColorPicker$PickerClick)),
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}
					}
				}
			});
	});
var _simonh1000$elm_colorpicker$ColorPicker$view = F2(
	function (col, _p15) {
		var _p16 = _p15;
		var _p17 = _p16._0;
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('color-picker'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'white'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'padding', _1: '2px'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
									_1: {ctor: '[]'}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _simonh1000$elm_colorpicker$ColorPicker$pickerStyles,
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(_simonh1000$elm_colorpicker$ColorPicker$picker, col, _p17),
						_1: {
							ctor: '::',
							_0: _simonh1000$elm_colorpicker$ColorPicker$pickerIndicator(col),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _simonh1000$elm_colorpicker$ColorPicker$pickerStyles,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _simonh1000$elm_colorpicker$ColorPicker$slider(_p17),
							_1: {
								ctor: '::',
								_0: _simonh1000$elm_colorpicker$ColorPicker$sliderIndicator(col),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
